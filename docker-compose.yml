version: "3.9"
   
services:
  
  db:
    image: postgis/postgis
    volumes:
      - ./data/db:/var/lib/postgresql/data
      # - pg_tileserv_db:/var/lib/postgresql/data
    ports:
      - "5431:5432"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
   
  actinia-core:
    image: mundialis/actinia-core:g78-latest-alpine
    volumes:
      - ./actinia-core-data/grassdb:/actinia_core/grassdb:Z
      - ./actinia-core-data/userdata:/actinia_core/userdata
    ports:
      - "8088:8088"
    depends_on:
      - redis

  redis:
    image: redis:5.0.4-alpine
    volumes:
      - ./redis_data:/data
    environment:
      - REDIS_PASS_FILE=/data/config/.redis
    command: [
      "sh", "-c",
      '
      docker-entrypoint.sh
      "/data/config/redis.conf"
      --requirepass "$$(cat $$REDIS_PASS_FILE)"
      '
    ]
    ports:
        - "6379:6379"
# pg_tileserv:
#   image: pramsey/pg_tileserv:latest-alpine-3.12
#   build:
#     context: ../..
#     dockerfile: Dockerfile.alpine
#     args:
#       VERSION: latest-alpine-3.12
#   container_name: pg_tileserv
#   env_file:
#     - pg_tileserv.env
#   depends_on:
#     - db
#   ports:
#     - 7800:7800

  api:
    build: .
    command: bash -c "python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - db
  
  webapp:
    build:
      context: ./webapp
      dockerfile: Dockerfile
    command: npm start
    volumes:
      - /code/node_modules
      - ./webapp/:/code
    ports:
      - "3000:3000"
    depends_on:
      - api
    

   