/*
 * Filename: /home/coreywhite/Documents/GitHub/TomorrowNow/TomorrowNowApp/webapp/src/components/Grass/Locations/LocationInfo.test.jsx
 * Path: /home/coreywhite/Documents/GitHub/TomorrowNow/TomorrowNowApp/webapp
 * Created Date: Tuesday, April 12th 2022, 4:04:04 pm
 * Author: Corey White
 * 
 * Copyright (c) 2022 Corey White
 */


import { LocationInfo } from "./LocationInfo"
import React from "react";
import { render, getByTestId } from '@testing-library/react'
import { ProjectionInfoModel } from "../Utils/Models/ProjectionInfoModel";
import '@testing-library/jest-dom'
import { ProcessResponseModel } from "../Utils/Models/ProcessResponseModel";
// https://testing-library.com/docs/react-testing-library/example-intro
describe("LocationInfo", ()=> {
    const projectionInfo = new ProjectionInfoModel({espg: '4326'})
    const locationName = "nc_spm_08"
    const testResponse = {"response": {"accept_datetime": "2022-06-09 05:19:50.871988", "accept_timestamp": 1654751990.8719873, "api_info": {"endpoint": "locationmanagementresourceuser", "method": "GET", "path": "/api/v3/locations/CONUS/info", "request_url": "http://actinia-core:8088/api/v3/locations/CONUS/info"}, "datetime": "2022-06-09 05:19:51.114553", "http_code": 200, "message": "Processing successfully finished", "process_chain_list": [{"1": {"flags": "ug3", "module": "g.region"}, "2": {"flags": "fw", "module": "g.proj"}}], "process_log": [{"executable": "g.region", "id": "1", "parameter": ["-ug3"], "return_code": 0, "run_time": 0.10021638870239258, "stderr": [""], "stdout": "projection=99\nzone=0\nn=1\ns=0\nw=0\ne=1\nt=1\nb=0\nnsres=1\nnsres3=1\newres=1\newres3=1\ntbres=1\nrows=1\nrows3=1\ncols=1\ncols3=1\ndepths=1\ncells=1\ncells3=1\n"}, {"executable": "g.proj", "id": "2", "parameter": ["-fw"], "return_code": 0, "run_time": 0.10020899772644043, "stderr": [""], "stdout": "PROJCRS[\"NAD83 / Conus Albers\",BASEGEOGCRS[\"NAD83\",DATUM[\"North American Datum 1983\",ELLIPSOID[\"GRS 1980\",6378137,298.257222101,LENGTHUNIT[\"metre\",1]]],PRIMEM[\"Greenwich\",0,ANGLEUNIT[\"degree\",0.0174532925199433]],ID[\"EPSG\",4269]],CONVERSION[\"Conus Albers\",METHOD[\"Albers Equal Area\",ID[\"EPSG\",9822]],PARAMETER[\"Latitude of false origin\",23,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8821]],PARAMETER[\"Longitude of false origin\",-96,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8822]],PARAMETER[\"Latitude of 1st standard parallel\",29.5,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8823]],PARAMETER[\"Latitude of 2nd standard parallel\",45.5,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8824]],PARAMETER[\"Easting at false origin\",0,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8826]],PARAMETER[\"Northing at false origin\",0,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8827]]],CS[Cartesian,2],AXIS[\"easting (X)\",east,ORDER[1],LENGTHUNIT[\"metre\",1]],AXIS[\"northing (Y)\",north,ORDER[2],LENGTHUNIT[\"metre\",1]],USAGE[SCOPE[\"Data analysis and small scale data presentation for contiguous lower 48 states.\"],AREA[\"United States (USA) - CONUS onshore - Alabama; Arizona; Arkansas; California; Colorado; Connecticut; Delaware; Florida; Georgia; Idaho; Illinois; Indiana; Iowa; Kansas; Kentucky; Louisiana; Maine; Maryland; Massachusetts; Michigan; Minnesota; Mississippi; Missouri; Montana; Nebraska; Nevada; New Hampshire; New Jersey; New Mexico; New York; North Carolina; North Dakota; Ohio; Oklahoma; Oregon; Pennsylvania; Rhode Island; South Carolina; South Dakota; Tennessee; Texas; Utah; Vermont; Virginia; Washington; West Virginia; Wisconsin; Wyoming.\"],BBOX[24.41,-124.79,49.38,-66.91]],ID[\"EPSG\",5070]]\n"}], "process_results": {"projection": "PROJCRS[\"NAD83 / Conus Albers\",BASEGEOGCRS[\"NAD83\",DATUM[\"North American Datum 1983\",ELLIPSOID[\"GRS 1980\",6378137,298.257222101,LENGTHUNIT[\"metre\",1]]],PRIMEM[\"Greenwich\",0,ANGLEUNIT[\"degree\",0.0174532925199433]],ID[\"EPSG\",4269]],CONVERSION[\"Conus Albers\",METHOD[\"Albers Equal Area\",ID[\"EPSG\",9822]],PARAMETER[\"Latitude of false origin\",23,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8821]],PARAMETER[\"Longitude of false origin\",-96,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8822]],PARAMETER[\"Latitude of 1st standard parallel\",29.5,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8823]],PARAMETER[\"Latitude of 2nd standard parallel\",45.5,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8824]],PARAMETER[\"Easting at false origin\",0,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8826]],PARAMETER[\"Northing at false origin\",0,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8827]]],CS[Cartesian,2],AXIS[\"easting (X)\",east,ORDER[1],LENGTHUNIT[\"metre\",1]],AXIS[\"northing (Y)\",north,ORDER[2],LENGTHUNIT[\"metre\",1]],USAGE[SCOPE[\"Data analysis and small scale data presentation for contiguous lower 48 states.\"],AREA[\"United States (USA) - CONUS onshore - Alabama; Arizona; Arkansas; California; Colorado; Connecticut; Delaware; Florida; Georgia; Idaho; Illinois; Indiana; Iowa; Kansas; Kentucky; Louisiana; Maine; Maryland; Massachusetts; Michigan; Minnesota; Mississippi; Missouri; Montana; Nebraska; Nevada; New Hampshire; New Jersey; New Mexico; New York; North Carolina; North Dakota; Ohio; Oklahoma; Oregon; Pennsylvania; Rhode Island; South Carolina; South Dakota; Tennessee; Texas; Utah; Vermont; Virginia; Washington; West Virginia; Wisconsin; Wyoming.\"],BBOX[24.41,-124.79,49.38,-66.91]],ID[\"EPSG\",5070]]\n", "region": {"b": 0.0, "cells": 1, "cells3": 1, "cols": 1, "cols3": 1, "depths": 1, "e": 1.0, "ewres": 1.0, "ewres3": 1.0, "n": 1.0, "nsres": 1.0, "nsres3": 1.0, "projection": 99, "rows": 1, "rows3": 1, "s": 0.0, "t": 1.0, "tbres": 1.0, "w": 0.0, "zone": 0}}, "progress": {"num_of_steps": 2, "step": 2}, "resource_id": "resource_id-c7fd537b-ed69-4e98-9d4a-55486287ee63", "status": "finished", "time_delta": 0.24258041381835938, "timestamp": 1654751991.11454, "urls": {"resources": [], "status": "http://actinia-core:8088/api/v3/resources/actinia-gdi/resource_id-c7fd537b-ed69-4e98-9d4a-55486287ee63"}, "user_id": "actinia-gdi"}}
    const testData = {
        data: new ProcessResponseModel({...testResponse.response}),
        errors: null,
        isLoading: false
    }
    it("renders with location name displayed", () => {
        const { container } = render(<LocationInfo locationId={locationName} grassLocation={testData}/>);
        let locationNameText = getByTestId(container, 'locationNameText')
        expect(locationNameText.textContent).toBe(locationName);
    });
})